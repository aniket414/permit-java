
package io.permit.sdk.openapi.models;

import java.util.Date;
import java.util.UUID;
import javax.annotation.processing.Generated;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ConditionSetRead
 * <p>
 * 
 * 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "key",
    "type",
    "autogenerated",
    "resource_id",
    "id",
    "organization_id",
    "project_id",
    "environment_id",
    "created_at",
    "updated_at",
    "resource",
    "name",
    "description",
    "conditions"
})
@Generated("jsonschema2pojo")
public class ConditionSetRead {

    /**
     * Key
     * <p>
     * A unique id by which Permit will identify the condition set. The key will be used as the generated rego rule name.
     * (Required)
     * 
     */
    @JsonProperty("key")
    @JsonPropertyDescription("A unique id by which Permit will identify the condition set. The key will be used as the generated rego rule name.")
    public String key;
    /**
     * the type of the set: UserSet or ResourceSet
     * 
     */
    @JsonProperty("type")
    @JsonPropertyDescription("the type of the set: UserSet or ResourceSet")
    public Object type = null;
    /**
     * Autogenerated
     * <p>
     * whether the set was autogenerated by the system.
     * 
     */
    @JsonProperty("autogenerated")
    @JsonPropertyDescription("whether the set was autogenerated by the system.")
    public Boolean autogenerated = false;
    /**
     * Resource Id
     * <p>
     * For ResourceSets, the id of the base resource.
     * 
     */
    @JsonProperty("resource_id")
    @JsonPropertyDescription("For ResourceSets, the id of the base resource.")
    public Object resourceId;
    /**
     * Id
     * <p>
     * Unique id of the condition set
     * (Required)
     * 
     */
    @JsonProperty("id")
    @JsonPropertyDescription("Unique id of the condition set")
    public UUID id;
    /**
     * Organization Id
     * <p>
     * Unique id of the organization that the condition set belongs to.
     * (Required)
     * 
     */
    @JsonProperty("organization_id")
    @JsonPropertyDescription("Unique id of the organization that the condition set belongs to.")
    public UUID organizationId;
    /**
     * Project Id
     * <p>
     * Unique id of the project that the condition set belongs to.
     * (Required)
     * 
     */
    @JsonProperty("project_id")
    @JsonPropertyDescription("Unique id of the project that the condition set belongs to.")
    public UUID projectId;
    /**
     * Environment Id
     * <p>
     * Unique id of the environment that the condition set belongs to.
     * (Required)
     * 
     */
    @JsonProperty("environment_id")
    @JsonPropertyDescription("Unique id of the environment that the condition set belongs to.")
    public UUID environmentId;
    /**
     * Created At
     * <p>
     * Date and time when the condition set was created (ISO_8601 format).
     * (Required)
     * 
     */
    @JsonProperty("created_at")
    @JsonPropertyDescription("Date and time when the condition set was created (ISO_8601 format).")
    public Date createdAt;
    /**
     * Updated At
     * <p>
     * Date and time when the condition set was last updated/modified (ISO_8601 format).
     * (Required)
     * 
     */
    @JsonProperty("updated_at")
    @JsonPropertyDescription("Date and time when the condition set was last updated/modified (ISO_8601 format).")
    public Date updatedAt;
    /**
     * ResourceRead
     * <p>
     * 
     * 
     */
    @JsonProperty("resource")
    public ResourceRead resource;
    /**
     * Name
     * <p>
     * A descriptive name for the set, i.e: 'US based employees' or 'Users behind VPN'
     * (Required)
     * 
     */
    @JsonProperty("name")
    @JsonPropertyDescription("A descriptive name for the set, i.e: 'US based employees' or 'Users behind VPN'")
    public String name;
    /**
     * Description
     * <p>
     * an optional longer description of the set
     * 
     */
    @JsonProperty("description")
    @JsonPropertyDescription("an optional longer description of the set")
    public String description;
    /**
     * Conditions
     * <p>
     * a boolean expression that consists of multiple conditions, with and/or logic.
     * 
     */
    @JsonProperty("conditions")
    @JsonPropertyDescription("a boolean expression that consists of multiple conditions, with and/or logic.")
    public Conditions__1 conditions;

    /**
     * No args constructor for use in serialization
     * 
     */
    public ConditionSetRead() {
    }

    /**
     * 
     * @param organizationId
     * @param createdAt
     * @param environmentId
     * @param name
     * @param id
     * @param projectId
     * @param key
     * @param updatedAt
     */
    public ConditionSetRead(String key, UUID id, UUID organizationId, UUID projectId, UUID environmentId, Date createdAt, Date updatedAt, String name) {
        super();
        this.key = key;
        this.id = id;
        this.organizationId = organizationId;
        this.projectId = projectId;
        this.environmentId = environmentId;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.name = name;
    }

    public ConditionSetRead withKey(String key) {
        this.key = key;
        return this;
    }

    public ConditionSetRead withType(Object type) {
        this.type = type;
        return this;
    }

    public ConditionSetRead withAutogenerated(Boolean autogenerated) {
        this.autogenerated = autogenerated;
        return this;
    }

    public ConditionSetRead withResourceId(Object resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    public ConditionSetRead withId(UUID id) {
        this.id = id;
        return this;
    }

    public ConditionSetRead withOrganizationId(UUID organizationId) {
        this.organizationId = organizationId;
        return this;
    }

    public ConditionSetRead withProjectId(UUID projectId) {
        this.projectId = projectId;
        return this;
    }

    public ConditionSetRead withEnvironmentId(UUID environmentId) {
        this.environmentId = environmentId;
        return this;
    }

    public ConditionSetRead withCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    public ConditionSetRead withUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    public ConditionSetRead withResource(ResourceRead resource) {
        this.resource = resource;
        return this;
    }

    public ConditionSetRead withName(String name) {
        this.name = name;
        return this;
    }

    public ConditionSetRead withDescription(String description) {
        this.description = description;
        return this;
    }

    public ConditionSetRead withConditions(Conditions__1 conditions) {
        this.conditions = conditions;
        return this;
    }

}
