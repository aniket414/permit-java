{
  "title": "ConditionSetRead",
  "required": [
    "key",
    "id",
    "organization_id",
    "project_id",
    "environment_id",
    "created_at",
    "updated_at",
    "name"
  ],
  "type": "object",
  "properties": {
    "key": {
      "title": "Key",
      "type": "string",
      "description": "A unique id by which Permit will identify the condition set. The key will be used as the generated rego rule name."
    },
    "type": {
      "existingJavaType": "io.permit.sdk.openapi.models.ConditionSetType",
      "description": "the type of the set: UserSet or ResourceSet"
    },
    "autogenerated": {
      "title": "Autogenerated",
      "type": "boolean",
      "description": "whether the set was autogenerated by the system.",
      "default": false
    },
    "resource_id": {
      "title": "Resource Id",
      "type": "string",
      "description": "For ResourceSets, the id of the base resource."
    },
    "id": {
      "title": "Id",
      "type": "string",
      "description": "Unique id of the condition set"
    },
    "organization_id": {
      "title": "Organization Id",
      "type": "string",
      "description": "Unique id of the organization that the condition set belongs to."
    },
    "project_id": {
      "title": "Project Id",
      "type": "string",
      "description": "Unique id of the project that the condition set belongs to."
    },
    "environment_id": {
      "title": "Environment Id",
      "type": "string",
      "description": "Unique id of the environment that the condition set belongs to."
    },
    "created_at": {
      "title": "Created At",
      "type": "string",
      "description": "Date and time when the condition set was created (ISO_8601 format).",
      "format": "date-time"
    },
    "updated_at": {
      "title": "Updated At",
      "type": "string",
      "description": "Date and time when the condition set was last updated/modified (ISO_8601 format).",
      "format": "date-time"
    },
    "resource": {
      "$ref": "ResourceRead.json"
    },
    "name": {
      "title": "Name",
      "minLength": 1,
      "type": "string",
      "description": "A descriptive name for the set, i.e: 'US based employees' or 'Users behind VPN'"
    },
    "description": {
      "title": "Description",
      "type": "string",
      "description": "an optional longer description of the set"
    },
    "conditions": {
      "title": "Conditions",
      "type": "object",
      "description": "a boolean expression that consists of multiple conditions, with and/or logic.",
      "default": {},
      "existingJavaType": "java.util.HashMap<String, Object>"
    }
  },
  "additionalProperties": false,
  "example": {
    "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
    "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
    "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
    "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
    "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
    "created_at": "2019-08-24T14:15:22Z",
    "updated_at": "2019-08-24T14:15:22Z",
    "key": "na_based_employees",
    "name": "US or Canada based employees",
    "description": "All employees based in the US or Canada",
    "type": "userset",
    "autogenerated": false,
    "conditions": {
      "allOf": [
        {
          "user.role": {
            "equals": "employee"
          }
        },
        {
          "user.location": {
            "in": [
              "US",
              "Canada"
            ]
          }
        }
      ]
    }
  },
  "$schema": "http://json-schema.org/schema#"
}